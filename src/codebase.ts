/**
 * TODO: this file is generated by llm, need to refactor it
 */
import child_process from 'child_process';
import fs from 'fs';
import path from 'path';
import util from 'util';

const REPOMIX_COMMAND = 'repomix --include "src,package.json,README.md"';
const OUTPUT_FILENAME = 'repomix-output.txt';
const MAX_FILE_SIZE_BYTES = 500 * 1024;
const OUTPUT_FILE_PATH = path.resolve(process.cwd(), OUTPUT_FILENAME);

/**
 * 执行 repomix 命令并获取其输出文件内容。
 * @returns {Promise<string>} 返回 repomix-output.txt 的文件内容。
 * @throws {Error} 如果 repomix 命令未找到、执行失败、输出文件不存在或过大，则抛出错误。
 */
export async function getCodebaseContext(): Promise<string> {
  const execPromise = util.promisify(child_process.exec);

  console.log(`正在执行命令: ${REPOMIX_COMMAND}`);

  try {
    const { stdout, stderr } = await execPromise(REPOMIX_COMMAND);
    if (stdout) console.log('repomix stdout:', stdout);
    if (stderr) console.warn('repomix stderr:', stderr);

    console.log('repomix 命令执行成功。');
  } catch (error: any) {
    if (
      error.code === 'ENOENT' ||
      (error.message && error.message.includes('command not found'))
    ) {
      console.error('错误：全局 repomix 命令未找到。');
      throw new Error(
        '全局 repomix 命令未找到，请确保已全局安装 repomix 并将其添加到系统 PATH 环境变量中。',
      );
    } else {
      console.error('repomix 命令执行失败:', error);
      throw new Error(`repomix 命令执行失败: ${error.message}`);
    }
  }

  try {
    const stats = fs.statSync(OUTPUT_FILE_PATH);

    if (stats.size > MAX_FILE_SIZE_BYTES) {
      console.error(
        `错误：${OUTPUT_FILENAME} 文件大小 (${stats.size} bytes) 超出限制 (${MAX_FILE_SIZE_BYTES} bytes)。`,
      );
      throw new Error(
        `${OUTPUT_FILENAME} 文件大小 (${stats.size} bytes) 超出限制 (${MAX_FILE_SIZE_BYTES} bytes)。`,
      );
    }

    console.log(
      `${OUTPUT_FILENAME} 文件检查通过 (大小: ${stats.size} bytes)。`,
    );

    const content = fs.readFileSync(OUTPUT_FILE_PATH, 'utf-8');
    console.log(`成功读取 ${OUTPUT_FILENAME} 文件内容。`);
    return content;
  } catch (error: any) {
    if (error.code === 'ENOENT') {
      console.error(`错误：未找到 repomix 输出文件 ${OUTPUT_FILENAME}。`);
      throw new Error(
        `执行 repomix 后未找到输出文件 ${OUTPUT_FILENAME}。请检查 repomix 是否成功生成了该文件。`,
      );
    } else {
      console.error(`读取或检查文件 ${OUTPUT_FILENAME} 时出错:`, error);
      throw new Error(`处理文件 ${OUTPUT_FILENAME} 时出错: ${error.message}`);
    }
  }
}
