/* prettier-ignore-start */
/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.
import { Route as rootRouteImport } from './pages/__root';
import { Route as ChatRouteImport } from './pages/chat';
import { Route as DemoRouteImport } from './pages/demo';
import { Route as TestRouteImport } from './pages/test';

const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any);
const DemoRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRouteImport,
} as any);
const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  '/chat': typeof ChatRoute;
  '/demo': typeof DemoRoute;
  '/test': typeof TestRoute;
}
export interface FileRoutesByTo {
  '/chat': typeof ChatRoute;
  '/demo': typeof DemoRoute;
  '/test': typeof TestRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/chat': typeof ChatRoute;
  '/demo': typeof DemoRoute;
  '/test': typeof TestRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/chat' | '/demo' | '/test';
  fileRoutesByTo: FileRoutesByTo;
  to: '/chat' | '/demo' | '/test';
  id: '__root__' | '/chat' | '/demo' | '/test';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  ChatRoute: typeof ChatRoute;
  DemoRoute: typeof DemoRoute;
  TestRoute: typeof TestRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test': {
      id: '/test';
      path: '/test';
      fullPath: '/test';
      preLoaderRoute: typeof TestRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/demo': {
      id: '/demo';
      path: '/demo';
      fullPath: '/demo';
      preLoaderRoute: typeof DemoRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/chat': {
      id: '/chat';
      path: '/chat';
      fullPath: '/chat';
      preLoaderRoute: typeof ChatRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  ChatRoute: ChatRoute,
  DemoRoute: DemoRoute,
  TestRoute: TestRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
